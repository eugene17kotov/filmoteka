{"mappings":"4iBAAA,IAAAA,EAAAC,EAAA,S,kDAMA,MAAMC,EAAK,SACLC,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAAIC,MAAML,GAAOM,KAAK,IAChEC,EAuEN,WACE,MAAMC,EAAM,IAAIN,KAEhB,OAAO,IAAIA,KAAKM,EAAIC,cAAeD,EAAIE,WAAYF,EAAIG,UAAY,GAChER,cACAC,MAAM,EAAG,G,CA5EQQ,GAAmBP,MAAML,GAAOM,KAAK,IAC3D,IAAIO,EAAO,EACPC,EAAoB,EACpBC,EAAuB,EACvBC,EAAW,+EAA+ET,cAA0BN,sEACxH,MAAMgB,EAAoB,4BACpBC,EAAkBC,SAASC,cAAc,aAE/CC,eAAeC,EAAYC,EAAKC,GAC9B,MAAMC,EAAwB,GAAGF,UAAYC,IAE7C,IAGE,aAFqBE,EAAA5B,GAAM6B,IAAIF,IAEjBG,KAAKC,Q,CACnB,MAAOC,GACPC,QAAQD,MAAMA,E,EAYlB,SAASE,EAAWC,GAClB,MAAMC,EAAiBD,EAAKE,KAAIC,GAKlC,SAA8BC,GAC5B,MACEC,QAAUC,SAAUC,EAAS,aAC7BC,SAAUC,EACVC,UAAYC,KAAMC,GAClBC,OAAQC,EACRC,QAASC,EACTC,QAAS3B,EAAG4B,WACZA,EACAC,eAAgBC,GACdhB,EAEEiB,EAAMH,EAAWI,MAAKnB,GAAQ,OAAOoB,KAAKpB,EAAKqB,WACrD,IAAIC,EAAU,GAKZA,EAHGJ,EAGOrC,EAAoBqC,EAAI/B,IAFxB,gCAKZ,MAAO,8EACuCmC,WAAiBT,oIAEnBJ,6EACsBI,uDACrBI,yDACE9B,gMAEcwB,uEACAP,2EACIE,oE,CApCzBiB,CAAqBvB,KAAO9B,KAAK,IAEzEY,EAAgB0C,mBAAmB,YAAa1B,E,EAXlD,EAAA2B,EAAAC,eAEAxC,EAAYN,EAAUH,GAAMkD,MAAKC,IAC/BhC,EAAWgC,EAAaC,OACxB,EAAAJ,EAAAK,cACAC,EAAmBH,EAAa,IAwDlC,MAAMI,EAAW,IAAIC,sBAMrB,SAA0BC,GACxBA,EAAQC,SAAQC,IACV1D,GAAqBC,GAIrByD,EAAMC,iBACR5D,GAAQ,GAER,EAAAgD,EAAAC,eAEAxC,EAAYN,EAAUH,GAAMkD,MAAKC,IAC/BhC,EAAWgC,EAAaC,OACxB,EAAAJ,EAAAK,cACAC,EAAmBH,IACnB,EAAAU,EAAAC,sBAAqBzD,GAEjBJ,GAAqBC,GACvBI,SACGC,cAAc,oBACdwD,UAAUC,OAAO,Y,UA1B8BH,EAAAI,SAkC5D,SAASX,EAAmBH,GAC1BlD,EAAoBkD,EAAae,KAAKC,KACtCjE,EAAuBiD,EAAae,KAAKE,OAAS,E,CAlCpDC,YAAW,KACTd,EAASe,QAAQT,EAAAU,eAAe,GAC/B,K","sources":["src/js/newsfeed-render.js"],"sourcesContent":["import axios from 'axios';\nimport { startLoader, stopLoader } from './loader';\nimport { slowScrollOnAddCards } from './infinity-scroll';\nimport { options } from './infinity-scroll';\nimport { scrollGuardRef } from './infinity-scroll';\n\nconst regex = /[0-9]/g;\nconst today = new Date().toISOString().slice(0, 10).match(regex).join('');\nconst lastWeeksDate = getLastWeeksDate().match(regex).join('');\nlet page = 0;\nlet newsCountBySearch = 0;\nlet newsCountStartOnPage = 0;\nlet NEWS_URL = `https://api.nytimes.com/svc/search/v2/articlesearch.json?q=movie&begin_date=${lastWeeksDate}&end_date=${today}&fq=Movies&sort=relevance&api-key=7V2Mdku3K6jAwbEoNcKctzHC7q7RRQcQ`;\nconst BASE_NEWS_IMG_URL = 'https://static01.nyt.com/';\nconst newsfeedGallery = document.querySelector('.newsfeed');\n\nasync function getNewsFeed(url, page) {\n  const urlWithPagePagination = `${url}&page=${page}`;\n\n  try {\n    const result = await axios.get(urlWithPagePagination);\n\n    return result.data.response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nstartLoader();\n\ngetNewsFeed(NEWS_URL, page).then(newsArticles => {\n  renderNews(newsArticles.docs);\n  stopLoader();\n  updatePageCountVar(newsArticles);\n});\n\nfunction renderNews(news) {\n  const newsFeedMarkup = news.map(item => createNewsCardMarkup(item)).join('');\n\n  newsfeedGallery.insertAdjacentHTML('beforeend', newsFeedMarkup);\n}\n\nfunction createNewsCardMarkup(newsItem) {\n  const {\n    byline: { original: author = 'Anonymous' },\n    pub_date: publishedAt,\n    headline: { main: title },\n    source: sourceName,\n    snippet: description,\n    web_url: url,\n    multimedia,\n    lead_paragraph: content,\n  } = newsItem;\n\n  const img = multimedia.find(item => /blog/.test(item.subtype));\n  let newsImg = '';\n\n  if (!img) {\n    newsImg = 'https://picsum.photos/400/300';\n  } else {\n    newsImg = BASE_NEWS_IMG_URL + img.url;\n  }\n\n  return `<li class=\"news-item-card\">\n            <img class=\"news-item-image\" src=\"${newsImg}\" alt=\"${description}\" loading=\"lazy\">            \n            <div class=\"news-item-content-wrapper\">\n                <h2 class=\"news-item-title\">${title}</h2>\n                <p class=\"news-item-description\"><b>Overview: </b>${description}</p>\n                <p class=\"news-item-content\">${content}</p>\n                <a class=\"news-item-btn\" href=\"${url}\" target=\"_blank\"><button type=\"button\" class=\"news-btn\">Read more</button></a>\n                <div class=\"news-item-meta\">\n                  <p class=\"news-item-source\"><b>Source: </b>${sourceName}</p>\n                  <p class=\"news-item-author\"><b>Author: </b>${author}</p>\n                  <p class=\"news-item-date\"><b>Published At: </b>${publishedAt}</p>\n                </div>\n            </div>\n          </li>`;\n}\n\nfunction getLastWeeksDate() {\n  const now = new Date();\n\n  return new Date(now.getFullYear(), now.getMonth(), now.getDate() - 7)\n    .toISOString()\n    .slice(0, 10);\n}\n\n// Infinity scroll\n\nconst observer = new IntersectionObserver(getStartObserver, options);\n\nsetTimeout(() => {\n  observer.observe(scrollGuardRef);\n}, 1000);\n\nfunction getStartObserver(entries) {\n  entries.forEach(entry => {\n    if (newsCountBySearch <= newsCountStartOnPage) {\n      return;\n    }\n\n    if (entry.isIntersecting) {\n      page += 1;\n\n      startLoader();\n\n      getNewsFeed(NEWS_URL, page).then(newsArticles => {\n        renderNews(newsArticles.docs);\n        stopLoader();\n        updatePageCountVar(newsArticles);\n        slowScrollOnAddCards(newsfeedGallery);\n\n        if (newsCountBySearch <= newsCountStartOnPage) {\n          document\n            .querySelector('.end-scroll-text')\n            .classList.remove('is-hidden');\n          return;\n        }\n      });\n    }\n  });\n}\n\nfunction updatePageCountVar(newsArticles) {\n  newsCountBySearch = newsArticles.meta.hits;\n  newsCountStartOnPage = newsArticles.meta.offset + 10;\n}\n"],"names":["$dIxxU","parcelRequire","$5a6154ef58b8b402$var$regex","$5a6154ef58b8b402$var$today","Date","toISOString","slice","match","join","$5a6154ef58b8b402$var$lastWeeksDate","now","getFullYear","getMonth","getDate","$5a6154ef58b8b402$var$getLastWeeksDate","$5a6154ef58b8b402$var$page","$5a6154ef58b8b402$var$newsCountBySearch","$5a6154ef58b8b402$var$newsCountStartOnPage","$5a6154ef58b8b402$var$NEWS_URL","$5a6154ef58b8b402$var$BASE_NEWS_IMG_URL","$5a6154ef58b8b402$var$newsfeedGallery","document","querySelector","async","$5a6154ef58b8b402$var$getNewsFeed","url","page1","urlWithPagePagination","$parcel$interopDefault","get","data","response","error","console","$5a6154ef58b8b402$var$renderNews","news","newsFeedMarkup","map","item","newsItem","byline","original","author","pub_date","publishedAt","headline","main","title","source","sourceName","snippet","description","web_url","multimedia","lead_paragraph","content","img","find","test","subtype","newsImg","$5a6154ef58b8b402$var$createNewsCardMarkup","insertAdjacentHTML","$kvC6y","startLoader","then","newsArticles","docs","stopLoader","$5a6154ef58b8b402$var$updatePageCountVar","$5a6154ef58b8b402$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$47HLs","slowScrollOnAddCards","classList","remove","options","meta","hits","offset","setTimeout","observe","scrollGuardRef"],"version":3,"file":"newsfeed.4b7ef6bf.js.map"}